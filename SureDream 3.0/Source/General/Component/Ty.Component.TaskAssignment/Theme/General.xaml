<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:base="clr-namespace:Ty.Base.WpfBase;assembly=Ty.Base.WpfBase"
                    xmlns:local="clr-namespace:Ty.Component.TaskAssignment"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <!--自定义资源引用-->
        <ResourceDictionary Source="/Ty.Base.WpfBase;component/Themes/Ty.Themes.Resource.xaml"/>
        <ResourceDictionary Source="/Ty.Base.WpfBase;component/Themes/Color/LightThemeResource.xaml"/>
        <ResourceDictionary Source="/Ty.Base.WpfBase;component/Themes/Ty.Thremes.Control.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <local:TrueForAllEqulsConverter x:Key="Resource.Converter.TrueForAllEqulsConverter"/>
    <local:AppendToStringConverter x:Key="Resource.Converter.AppendToStringConverter"/>
    <local:ConvertPoleFromSiteConverter x:Key="Resource.Converter.ConvertPoleFromSiteConverter"/>
    <local:IsEqualValueConverter x:Key="Resource.Converter.IsEqualValueConverter"/>

    <local:ProgressToValueConverter x:Key="Resource.Converter.ProgressToValueConverter"/>
    <local:ProgressToColorConverter x:Key="Resource.Converter.ProgressToColorConverter"/>
    <local:StationDataSourceValuesConverter x:Key="Resource.Converter.StationDataSourceValuesConverter"/>
    <local:ConvertLineConverter x:Key="Resource.Converter.ConvertLineConverter"/>
    <local:LineToToolTipConverter x:Key="Resource.Converter.LineToToolTipConverter"/>
    

    <SolidColorBrush x:Key="Resource.SolidColorBrush.ButtonBackground" Color="#7ca4e8"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.ButtonForground" Color="White"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.ButtonBordBrush" Color="#3c70c8"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.NormalForground" Color="#bababa"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.GridForground" Color="#707070"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.ButtonDeleteBackground" Color="#ffcdd1"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.ButtonDeleteForeground" Color="#fa7f87"/>
    <SolidColorBrush x:Key="Resource.SolidColorBrush.ButtonDSumitBackground" Color="#fe9b00"/>

    <!--调整列头宽度样式-->
    <Style x:Key="DefaultColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" Margin="0 0 0 2">
                        <Rectangle HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--列头header样式-->
    <Style x:Key="DefaultDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="25" />
        <!--<Setter Property="Height" Value="80" />-->
        <Setter Property="Foreground" Value="#282828" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,4,4,7" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <!--<Setter Property="FontWeight" Value="SemiBold"></Setter>-->
        <!--<Setter Property="FontSize" Value="{StaticResource HeaderFontSize}" />-->
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="BorderBrush" Value="{DynamicResource S_GrayNotice}" />
        <Setter Property="Background" Value="#d8dfe4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="2" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <ContentPresenter x:Name="HeaderContent"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <TextBlock x:Name="SortArrow" Style="{StaticResource FIcon}" Text="&#xe66f;" Grid.Column="1" Width="20"
                                       Visibility="Collapsed" FontSize="10" Margin="1,1,3,1" />

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                               Style="{StaticResource DefaultColumnHeaderGripperStyle}" />

                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Background="Transparent"
                               Style="{StaticResource DefaultColumnHeaderGripperStyle}" Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--显示排序标示-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                                <Condition Property="CanUserSort" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <!--可排序列鼠标样式-->
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <!--升序-->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--降序-->
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="Text" Value="&#xe66e;"/>
                        </Trigger>
                        <!--第一列左边不显示分割线-->
                        <Trigger Property="DisplayIndex" Value="2">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--行样式-->
    <Style x:Key="DefaultDataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{DynamicResource TitleTextForeground}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,0,0,0" />

        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource S_GrayLight}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter  Property="Background" Value="#f2f7fa" />
                <Setter Property="Foreground" Value="#888888" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter  Property="Background" Value="#f2f7fa" />
                <Setter Property="Foreground" Value="#888888" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter  Property="Background" Value="#f2f7fa" />
                <Setter Property="Foreground" Value="#888888" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--行头调整高度样式 -->
    <Style x:Key="DefaultRowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--行头部样式-->
    <Style x:Key="DefaultDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding Margin}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalContentAlignment="Top"
                               VerticalAlignment="Top" Background="Transparent" Style="{StaticResource DefaultRowHeaderGripperStyle}" />
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalContentAlignment="Bottom"
                               VerticalAlignment="Bottom" Style="{StaticResource DefaultRowHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--单元格样式-->
    <Style x:Key="DefaultDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="#888888"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">

                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--表格DataGrid样式-->
    <Style x:Key="DefaultDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="MinRowHeight" Value="38" />
        <Setter Property="ColumnHeaderHeight" Value="38" />
        <Setter Property="Background" Value="{DynamicResource S_WhiteNotice}" />
        <Setter Property="BorderBrush" Value="{DynamicResource  S_GrayNotice}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalGridLinesBrush" Value="#e6e6eb" />
        <Setter Property="VerticalGridLinesBrush" Value="#e6e6eb" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultDataGridColumnHeader}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DefaultDataGridRowHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCell}" />
        <Setter Property="RowStyle" Value="{StaticResource DefaultDataGridRow}" />
        <Setter Property="HeadersVisibility" Value="All" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="AlternationCount" Value="2"></Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        
        <!--列头移动列时候分割线样式-->
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="{DynamicResource S_WhiteNotice}" />
                    <Setter Property="Width" Value="2.5" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Fill="{TemplateBinding Background}" 
                                           Height="{TemplateBinding Height}" 
                                           Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--DataGrid控件模板-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            x:Name="border"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="col_rowheader" Width="1" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <!--表格头部-->
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" 
                                                                        Grid.Column="1" Grid.ColumnSpan="2"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <!--主数据区-->
                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" />
                                        </Grid>
                                        <!--垂直滑动条-->
                                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                                   Grid.Column="2" 
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   Grid.Row="0" 
                                                   Grid.RowSpan="3" 
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <!--横向滑动条-->
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                                   Grid.Column="0" 
                                                   Grid.ColumnSpan="2" 
                                                   Grid.Row="2"
                                                       Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ToggleButton}" x:Key="FIconToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource NormalTextForeground}" />
        <Setter Property="base:ControlAttachProperty.FIconSize" Value="20"/>
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="1"/>
        <Setter Property="base:ControlAttachProperty.FIcon" Value="&#xe603;"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding base:ControlAttachProperty.FIconMargin}">
                            <TextBlock x:Name="FIcon" 
                                   FontSize="{Binding Path=(base:ControlAttachProperty.FIconSize),RelativeSource={RelativeSource TemplatedParent}}"
                                   Text="{TemplateBinding base:ControlAttachProperty.FIcon}" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Style="{StaticResource FIcon}" />
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" 
                                       FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource TemplatedParent}}"  
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--z触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S_AccentBrush}" />
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="txt"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource S_GrayNotice}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource S_AccentBrush}" />
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="FIcon"/>
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="txt"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--默认日历样式-->
    <Style x:Key="DefaultCalendar" TargetType="{x:Type Calendar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
        <!--<Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />-->
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="Background" Value="{DynamicResource S_WhiteNotice}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalTextForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center" Background="Transparent">
                        <CalendarItem x:Name="PART_CalendarItem" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      FontSize="{TemplateBinding FontSize}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{TemplateBinding Background}"
                                      Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--编辑状态文本框样式-->
    <Style TargetType="{x:Type TextBox}" x:Key="EditableTextBoxStyle">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MaxLength" Value="2048"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource NormalTextForeground}"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalTextForeground}"/>
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextSelectionBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"></Setter>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" Value="0.8"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <sys:String x:Key="DateFormat">yyyy-MM-dd</sys:String>

    <Style x:Key="DefaultDatePicker" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource Resource.SolidColorBrush.ButtonForground}"/>
        <Setter Property="Background" Value="{StaticResource Resource.SolidColorBrush.ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Resource.SolidColorBrush.ButtonBordBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalTextForeground}" />
        <Setter Property="base:ControlAttachProperty.FocusBorderBrush" Value="{DynamicResource TitleTextForeground}" />
        <Setter Property="base:ControlAttachProperty.MouseOverBorderBrush" Value="{DynamicResource TitleTextForeground}" />
        <Setter Property="base:ControlAttachProperty.FocusBackground" Value="{DynamicResource S_AccentBrush}" />
        <Setter Property="base:ControlAttachProperty.FIconSize" Value="18" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="120" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="SelectedDate" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CalendarStyle" Value="{StaticResource DefaultCalendar}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Grid x:Name="PART_InnerGrid" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <!--Label区域-->
                            <ContentControl x:Name="Label" Template="{TemplateBinding base:ControlAttachProperty.LabelTemplate}" 
                                            IsTabStop="False" IsHitTestVisible="False"
                                            Content="{TemplateBinding base:ControlAttachProperty.Label}" 
                                            Margin="1,1,0,1"/>
                            <!--附加内容区域-->
                            <Border x:Name="PART_AttachContent" Grid.Column="2" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" >
                                <ContentControl VerticalAlignment="Center" 
                                                VerticalContentAlignment="Center" 
                                                Template="{TemplateBinding base:ControlAttachProperty.AttachContent}"/>
                            </Border>
                            <!--下拉按钮-->
                            <!--<ToggleButton x:Name="PART_DropDownToggle" 
                                          IsTabStop="False" 
                                          Style="{StaticResource FIconToggleButton}" 
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Margin="2,1,2,1"
                                          Grid.Column="3"  
                                          base:ControlAttachProperty.FIconSize="{TemplateBinding base:ControlAttachProperty.FIconSize}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="{TemplateBinding Background}"/>-->

                            <ToggleButton x:Name="PART_DropDownToggle" BorderThickness="0" Margin="5" 
                                                  Background="Transparent"    IsTabStop="False" 
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Grid.Column="3"  >
                                <Image  x:Name="image" Source="../Resources/triangle-down.png"/>

                            </ToggleButton>
                            
                            <!--水印-->
                            <!--<Border Grid.Column="1">
                                <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" Text="{TemplateBinding base:ControlAttachProperty.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" Opacity="{StaticResource WatermarkOpacity}" HorizontalAlignment="Left" TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                            </Border>-->
                            <!--Date内容区-->
                            <Grid Grid.Column="1">
                                <TextBox x:Name="PART_TextBox" Style="{StaticResource EditableTextBoxStyle}" HorizontalAlignment="Stretch" 
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="True" IsReadOnly="True"
                                     FontFamily="{TemplateBinding FontFamily}"
                                         Foreground="{TemplateBinding Foreground}" 
                                         FontSize="{TemplateBinding FontSize}"  
                                     Text="{Binding Path=SelectedDate,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent},StringFormat={StaticResource DateFormat}}"/>
                            </Grid>
                            <!--弹出日历-->
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_Root}" StaysOpen="False" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--1.显示水印-->
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Resource.ControlTemplate.Button.Default" TargetType="Button">
        <Grid>
            <Border Background="{TemplateBinding Background}">
                <TextBlock Foreground="{TemplateBinding Foreground}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>