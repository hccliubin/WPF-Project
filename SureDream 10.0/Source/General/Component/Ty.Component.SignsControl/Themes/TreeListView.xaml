<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:local="clr-namespace:Ty.Component.SignsControl" 
                   xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--Converter for Indentation of items-->
    <local:LevelToIndentConverter x:Key="LevelIndentConverter" />

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="13" Height="13" Background="Transparent">
                        <Border  BorderThickness="0"
                                BorderBrush="#FF7898B5"
                                CornerRadius="1" 
                                SnapsToDevicePixels="true">
                            <!--<Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="White" Offset=".2"/>
                                        <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>-->
                            <Viewbox>
                                <Path x:Name="ExpandPath"
                                  Fill="White" 
                                  Margin="1,1,1,1"
                                  Data="M449.386 277.44l250.667 250.773-250.667 250.667z"> 
                                </Path>
                            </Viewbox>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M767.893 449.386l-250.773 250.667-250.667-250.667z"/>
                       </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CellTemplate_Name">
        <DockPanel>
            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                      Margin="{Binding Path=Level,  Converter={StaticResource LevelIndentConverter},  RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}"
                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}"
                      ClickMode="Press"/>
            <!--首列绑定值-->
            <TextBlock Margin="5,0">
                <Run Text="{Binding Code}"/>
                <Run Text="{Binding Name}"/>
            </TextBlock>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}" 
                         Value="False">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--<ImageBrush x:Key="gvHeaderBackground" ImageSource="/TreeListViewSample;component/Images/list_header_bk.png" />-->
    
    <Style x:Key="gvColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Style.Setters>
            <Setter Property="Height" Value="34" />
            <!--<Setter Property="Background" Value="{StaticResource gvHeaderBackground}" />-->
        </Style.Setters>
    </Style>

    <GridViewColumnCollection x:Key="gvColumns">
        <GridViewColumn Header="姓名" CellTemplate="{StaticResource CellTemplate_Name}"/>
        <!--<GridViewColumn Header="年龄" 
                        DisplayMemberBinding="{Binding Age}" Width="80" />
        <GridViewColumn Header="性别" 
                        DisplayMemberBinding="{Binding Sex}" Width="80" />
        <GridViewColumn Header="职务"
                        DisplayMemberBinding="{Binding Duty}" Width="100" />-->
    </GridViewColumnCollection>

    <!--交替行样式-->
    <AlternationConverter x:Key="conBack">
        <SolidColorBrush>#252525</SolidColorBrush>
        <SolidColorBrush>#252525</SolidColorBrush>
    </AlternationConverter>

    <Style TargetType="{x:Type local:TreeListViewItem}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
        <Setter Property="Visibility" Value="{Binding Visibility}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},
                Path=(local:TreeListView.AlternationIndex),
                Converter={StaticResource conBack}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListViewItem}">
                    <StackPanel>
                        <Border x:Name="outerBorder"
                                BorderThickness="0,0,0,0.3"
                                BorderBrush="LightGray"
                                Margin="0" Padding="0" Height="30"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="True">
                            <Border x:Name="innerBorder"
                                    BorderThickness="0,0,0,0.3"
                                    BorderBrush="LightGray"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    SnapsToDevicePixels="True">
                                <GridViewRowPresenter x:Name="PART_Header" 
                                                  Content="{TemplateBinding Header}"
                                                  Columns="{StaticResource gvColumns}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="local:TreeListView.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#FFE1E4F7"></Setter>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true" SourceName="innerBorder">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#353535" TargetName="innerBorder"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#454545" TargetName="innerBorder"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"  Value="White"/>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"  Value="White"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TreeListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListView}">
                    <!--Create a standard border around the 'TreeListView'.-->
                    <Border Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <!--ScrollViewer providing horizontal scrolling functionality 
                                for both, content and headers.-->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Disabled">
                            <DockPanel>
                                <!--The header row.-->
                                <GridViewHeaderRowPresenter DockPanel.Dock="Top" Visibility="Collapsed"
                                                            ColumnHeaderContainerStyle="{StaticResource gvColumnHeaderStyle}"
                                                            Columns="{StaticResource gvColumns}" />
                                <!--ScrollViewer providing vertical scrolling
                                        functionality for the content.-->
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto">
                                    <!--ItemsPresenter containg the content.-->
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
